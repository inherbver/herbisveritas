name: Nightly Extended Tests
# Tests √©tendus ex√©cut√©s chaque nuit pour d√©tecter les r√©gressions

on:
  schedule:
    # Tous les jours √† 3h du matin UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type de tests √† ex√©cuter'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - performance
        - security
        - compatibility

jobs:
  # Tests de compatibilit√© navigateurs √©tendus
  browser-compatibility:
    name: Browser Compatibility Tests
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'compatibility' }}
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        viewport: 
          - { width: 1920, height: 1080 }  # Desktop HD
          - { width: 1366, height: 768 }   # Desktop standard
          - { width: 768, height: 1024 }   # Tablet portrait
          - { width: 375, height: 667 }    # Mobile
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Run compatibility tests
        run: |
          npx playwright test \
            --project=${{ matrix.browser }} \
            --config=playwright.config.nightly.ts \
            tests/compatibility/

  # Tests de performance approfondie
  performance-deep-dive:
    name: Performance Deep Analysis
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'performance' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build optimized version
        run: npm run build
      
      - name: Performance audit with multiple scenarios
        run: |
          # Tests de charge simul√©e
          npx lighthouse-ci autorun --config=lighthouserc.extended.json
          
          # Analyse de bundle d√©taill√©e
          npx webpack-bundle-analyzer .next/static/chunks --report --mode json > bundle-analysis.json
          
          # Tests de performance memory
          node scripts/memory-performance-test.js

  # Tests de s√©curit√© approfondis
  security-deep-scan:
    name: Security Deep Scan
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'security' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Advanced Semgrep scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/owasp-top-ten
            p/javascript
            p/typescript
            p/react
            p/nextjs
          
      - name: OWASP ZAP security scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          target: 'http://localhost:3003'
          
      - name: Snyk vulnerability scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Tests de r√©gression visuelle
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright
        run: npx playwright install --with-deps
      
      - name: Run visual regression tests
        run: |
          npx playwright test \
            tests/visual-regression/ \
            --update-snapshots=missing
      
      - name: Upload visual diff artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: visual-regression-diffs
          path: test-results/

  # Tests de stress et endurance
  stress-tests:
    name: Stress & Endurance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Start application
        run: npm start &
      
      - name: Wait for application
        run: npx wait-on http://localhost:3003
      
      - name: Run stress tests with Artillery
        run: |
          npx artillery run tests/stress/checkout-stress.yml
          npx artillery run tests/stress/admin-stress.yml
          npx artillery run tests/stress/api-stress.yml

  # Tests d'accessibilit√© approfondis
  accessibility-deep:
    name: Deep Accessibility Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Start application
        run: npm start &
      
      - name: Wait for application
        run: npx wait-on http://localhost:3003
      
      - name: Run axe accessibility tests
        run: |
          npx axe-cli http://localhost:3003 \
            --tags wcag2a,wcag2aa,wcag21aa \
            --reporter json \
            --output accessibility-report.json
      
      - name: Run Pa11y accessibility tests
        run: |
          npx pa11y-ci \
            --sitemap http://localhost:3003/sitemap.xml \
            --reporter json > pa11y-report.json

  # Notification des r√©sultats
  notify-results:
    name: Notify Nightly Results
    runs-on: ubuntu-latest
    needs: [browser-compatibility, performance-deep-dive, security-deep-scan, visual-regression, stress-tests, accessibility-deep]
    if: always()
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#dev-notifications'
          text: |
            üåô Tests nocturnes termin√©s
            
            Compatibilit√© navigateurs: ${{ needs.browser-compatibility.result }}
            Performance: ${{ needs.performance-deep-dive.result }}
            S√©curit√©: ${{ needs.security-deep-scan.result }}
            R√©gression visuelle: ${{ needs.visual-regression.result }}
            Tests de stress: ${{ needs.stress-tests.result }}
            Accessibilit√©: ${{ needs.accessibility-deep.result }}
            
            Voir les d√©tails: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}