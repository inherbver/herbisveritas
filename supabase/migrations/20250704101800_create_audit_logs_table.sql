-- supabase/migrations/YYYYMMDDHHMMSS_create_audit_logs_table.sql

-- Création de la table pour les journaux d'audit
CREATE TABLE public.audit_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ WITH TIME ZONE DEFAULT NOW() NOT NULL,
    event_type TEXT NOT NULL,
    user_id UUID REFERENCES auth.users(id) ON DELETE SET NULL, -- L'admin qui a effectué l'action
    data JSONB, -- Contient toutes les autres infos : target_user_id, old_role, new_role, reason, ip, etc.
    CONSTRAINT event_type_check CHECK (char_length(event_type) > 0)
);

-- Activer RLS pour la sécurité
ALTER TABLE public.audit_logs ENABLE ROW LEVEL SECURITY;

-- Politiques RLS : Seuls les admins peuvent lire les logs, personne ne peut les modifier ou les supprimer directement.
CREATE POLICY "Admins can read audit logs" 
ON public.audit_logs 
FOR SELECT 
TO authenticated 
USING (is_current_user_admin());

CREATE POLICY "Logs are immutable" 
ON public.audit_logs 
FOR UPDATE 
USING (false);

CREATE POLICY "Logs cannot be deleted" 
ON public.audit_logs 
FOR DELETE 
USING (false);

-- Donner les droits d'insertion au rôle 'service_role' (utilisé par les Edge Functions)
GRANT INSERT ON public.audit_logs TO service_role;

COMMENT ON TABLE public.audit_logs IS 'Journal des événements de sécurité et des actions administratives critiques.';
COMMENT ON COLUMN public.audit_logs.user_id IS 'ID de l''utilisateur (généralement un admin) qui a déclenché l''événement.';
COMMENT ON COLUMN public.audit_logs.data IS 'Données JSON détaillées sur l''événement (ex: cible, changements, justification, IP).';
